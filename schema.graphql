### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type FlashCard {
  back: String!
  front: String!
  id: Int!
  isDone: Boolean!
  owner: User!
}

input FlashCardOrderByInput {
  back: Sort
  createdAt: Sort
  front: Sort
  isDone: Sort
}

type Mutation {
  create(back: String!, front: String!): FlashCard!
  login(email: String!, password: String!): AuthPayload!
  markAsRead(id: Int!): FlashCard!
  signup(email: String!, fullName: String!, password: String!): AuthPayload!
}

type Query {
  cards(orderBy: [FlashCardOrderByInput!]): [FlashCard!]!
}

enum Sort {
  asc
  desc
}

type User {
  email: String!
  flashCards: [FlashCard!]!
  fullName: String!
  id: Int!
}